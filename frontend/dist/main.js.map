{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?69fa","webpack:///./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///./src/App.vue","webpack:///./src/App.vue?ad38","webpack:///./src/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","makeMap","str","expectsLowerCase","map","list","split","length","val","toLowerCase","isGloballyWhitelisted","specialBooleanAttrs","isSpecialBooleanAttr","normalizeStyle","isArray","res","normalized","isObject","normalizeClass","isString","trim","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","test","extend","a","b","arr","el","indexOf","splice","hasOwn","Array","isFunction","isSymbol","isPromise","then","catch","objectToString","toString","toTypeString","toRawType","slice","isReservedProp","cacheStringFunction","fn","cache","camelizeRE","camelize","replace","_","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","hasChanged","oldValue","toDisplayString","isPlainObject","JSON","stringify","String","invokeArrayFns","fns","arg","def","obj","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","options","_isEffect","isEffect","raw","effect","args","active","scheduler","undefined","includes","trackStack","push","shouldTrack","pop","resetTracking","id","uid","deps","createReactiveEffect","lazy","onStop","delete","pauseTracking","last","track","target","type","depsMap","set","Map","dep","Set","has","add","trigger","newValue","oldTarget","effects","computedRunners","effectsToAdd","forEach","computed","isAddOrDelete","run","builtInSymbols","getOwnPropertyNames","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","targetIsArray","Reflect","isRef","readonly","reactive","this","createSetter","shallowSet","hadKey","result","ownKeys","mutableHandlers","deleteProperty","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","getProto","v","getPrototypeOf","get$1","wrap","rawKey","has$1","size","createForEach","callback","thisArg","observed","createIterableMethod","method","isMap","isPair","iterator","isKeyOnly","innerIterator","apply","done","next","createReadonlyMethod","mutableInstrumentations","proto","del","clear","hadItems","readonlyInstrumentations","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","readonlyCollectionHandlers","rawToReactive","reactiveToRaw","rawToReadonly","readonlyToRaw","WeakSet","collectionTypes","isObservableType","createReactiveObject","toProxy","toRaw","baseHandlers","collectionHandlers","_isVNode","isFrozen","handlers","constructor","Proxy","isProxy","convert","_isRef","createRef","rawValue","newVal","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","values","vnode","cur","parent","exposedInstance","proxy","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","contextVNode","logError","queue","postFlushCbs","Promise","resolve","isFlushing","isFlushPending","nextTick","queueJob","job","queueFlush","queuePostFlushCb","cb","flushJobs","flushPostFlushCbs","seen","cbs","getId","Infinity","sort","shift","currentRenderingInstance","setCurrentRenderingInstance","renderComponentRoot","Component","withProxy","props","slots","attrs","emit","renderCache","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","render","getFallthroughAttrs","root","inheritAttrs","keys","cloneVNode","dynamicChildren","patchFlag","parentScopeId","__scopeId","dirs","transition","createVNode","Comment","hasPropsChanged","prevProps","nextProps","nextKeys","updateHOCHostEl","subTree","queueEffectWithSuspense","suspense","isResolved","withCtx","ctx","owner","arguments","currentScopeId","scopeIdStack","pushScopeId","popScopeId","NULL_DYNAMIC_COMPONENT","Fragment","Text","Static","blockStack","currentBlock","openBlock","disableTracking","createBlock","children","dynamicProps","isVNode","isSameVNodeType","n1","n2","normalizeKey","normalizeRef","ref","_createVNode","isBlockNode","__vccOpts","class","klass","style","__isSuspense","isSuspense","__isTeleport","isTeleport","scopeId","component","anchor","targetAnchor","normalizeChildren","default","_ctx","createTextVNode","extraProps","ret","toMerge","handlersRE","existing","incoming","concat","mergeProps","text","flag","child","cloneIfMounted","event","handler","startsWith","isEmitListener","emits","_n","normalizeEmitsOptions","initProps","rawProps","isStateful","isSSR","setFullProps","0","1","needCastKeys","normalizePropsOptions","camelKey","rawCurrentProps","resolvePropValue","opt","hasDefault","defaultValue","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","Boolean","stringIndex","normalizedEntry","getType","ctor","match","isSameType","expectedTypes","len","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","normalizeVNodeSlots","invokeDirectiveHook","prevVNode","bindings","oldBindings","binding","hook","dir","createAppContext","isNativeTag","devtools","performance","globalProperties","optionMergeStrategies","isCustomElement","warnHandler","mixins","components","directives","provides","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","isMounted","app","_component","_props","_container","_context","use","plugin","install","mixin","directive","rootContainer","isHydrate","provide","prodEffectOptions","queuePostRenderEffect","baseCreateRenderer","createHydrationFns","insert","hostInsert","remove","hostRemove","patchProp","hostPatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","setStaticContent","hostSetStaticContent","patch","container","parentComponent","parentSuspense","isSVG","optimized","getNextHostNode","unmount","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","process","internals","refValue","setRef","mountElement","patchElement","vnodeHook","is","onVnodeBeforeMount","invokeVNodeHook","treeOwnerId","mountChildren","persisted","beforeEnter","onVnodeMounted","enter","start","oldProps","newProps","onVnodeBeforeUpdate","patchProps","propsToUpdate","prev","unmountChildren","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","activate","mountComponent","updateComponent","initialVNode","emptyAppContext","update","accessCache","data","refs","setupState","setupContext","asyncDep","asyncResolved","isUnmounted","isDeactivated","bc","bm","bu","u","um","bum","da","rtg","rtc","createComponentInstance","isKeepAlive","renderer","isInSSRComponentSetup","initSlots","setupResult","PublicInstanceProxyHandlers","setup","createSetupContext","currentInstance","resolvedResult","handleSetupResult","finishComponentSetup","setupStatefulComponent","setupComponent","registerDep","setupRenderEffect","placeholder","nextVNode","prevChildren","nextChildren","$stable","shouldUpdateComponent","updateComponentPreRender","invalidateJob","nextTree","prevTree","hydrateNode","rawPrevProps","rawOptions","kebabKey","camelizedKey","updateProps","needDeletionCheck","deletionComparisonTarget","updateSlots","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","arrI","getSequence","nextIndex","move","moveType","leave","delayLeave","afterLeave","performLeave","doRemove","shouldInvokeDirs","shouldKeepAlive","onVnodeBeforeUnmount","deactivate","unmountComponent","onVnodeUnmounted","removeFragment","performRemove","end","rawRef","oldRawRef","oldRef","_vnode","mt","mc","pc","pbc","createApp","useTransitionState","state","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","BaseTransition","appear","onBeforeEnter","Function","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","getCurrentInstance","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","oldChild","oldInnerChild","prevHooks","leavingHooks","setTransitionHooks","delayedLeave","earlyRemove","getLeavingNodesForType","_leaveCb","leavingVNodesCache","callHook","hooks","leavingVNode","called","afterEnter","_enterCb","cancelled","__isKeepAlive","RegExp","getName","comp","displayName","matches","pattern","some","registerKeepAliveHook","wrappedHook","__wdc","current","injectHook","injectToKeepAliveRoot","keepAliveRoot","onUnmounted","prepend","__weh","setCurrentInstance","unshift","createHook","lifecycle","onBeforeMount","onBeforeUpdate","onUpdated","onRenderTriggered","onRenderTracked","invoke","INITIAL_WATCHER_VALUE","watch","source","doWatch","immediate","deep","flush","onTrack","onTrigger","cleanup","onInvalidate","baseGetter","traverse","runner","applyCb","recordInstanceBoundEffect","instanceWatch","publicThis","stop","parentProvides","inject","applyOptions","deferredData","deferredWatch","asMixin","extends","extendsOptions","propsOptions","dataOptions","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeUnmount","unmounted","renderTracked","renderTriggered","errorCaptured","globalMixins","callSyncHook","applyMixins","from","methodHandler","resolveData","dataFn","configurable","createWatcher","onDeactivated","onErrorCaptured","callHookFromMixins","baseHook","selfHook","mergeOptions","to","strats","strat","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","__merged","$forceUpdate","$nextTick","$watch","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","compile","template","_rc","getterOrOptions","setter","dirty","svgNS","doc","document","tempContainer","tempSVGContainer","nodeOps","insertBefore","appendChild","removeChild","tag","createElementNS","createTextNode","node","nodeValue","textContent","querySelector","selector","setAttribute","content","temp","innerHTML","importantRE","setStyle","setProperty","prefixed","rawName","cached","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","Date","now","createEvent","timeStamp","cachedNow","getNow","addEventListener","removeEventListener","createInvoker","initialValue","invoker","e","lastUpdated","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","nativeOnRE","TransitionPropsValidators","propsOrChildren","h","resolveTransitionProps","css","duration","Number","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","baseProps","durations","toNumber$1","normalizeDuration","enterDuration","leaveDuration","finishEnter","removeTransitionClass","finishLeave","callHookWithErrorHandling","addTransitionClass","nextFrame","setTimeout","whenTransitionEnds","cls","classList","_vtc","requestAnimationFrame","expectedType","timeout","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","window","getComputedStyle","getStyleProperties","transitionDelays","TRANSITION","transitionDurations","transitionTimeout","getTimeout","animationDelays","ANIMATION","animationDurations","animationTimeout","max","hasTransform","delays","toMs","positionMap","newPositionMap","TransitionGroupImpl","moveClass","hasMove","clone","display","nodeType","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","body","offsetHeight","transform","webkitTransform","transitionDuration","_moveCb","propertyName","cssTransitionProps","getTransitionRawChildren","getBoundingClientRect","oldPos","newPos","dx","left","dy","top","rendererOptions","prevValue","nextValue","transitionClasses","join","className","patchClass","cssText","removeAttribute","patchStyle","prevOptions","nextOptions","capture","passive","once","patchEvent","tagName","_value","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","ensureRenderer","normalizeContainer","inc","count","mount","containerOrSelector"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export { default } from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--2-0!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/vue-loader/dist/index.js??ref--8-0!./App.vue?vue&type=style&index=0&id=e3a1a498&scoped=true&lang=css\"; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--2-0!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/vue-loader/dist/index.js??ref--8-0!./App.vue?vue&type=style&index=0&id=e3a1a498&scoped=true&lang=css\"","// Make a map and return a function for checking if a key\r\n// is in that map.\r\n//\r\n// IMPORTANT: all calls of this function must be prefixed with /*#__PURE__*/\r\n// So that rollup can tree-shake them if necessary.\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n// Patch flags are optimization hints generated by the compiler.\r\n// when a block with dynamicChildren is encountered during diff, the algorithm\r\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\r\n// a render function generated by the compiler, so the algorithm only needs to\r\n// handle updates explicitly marked by these patch flags.\r\n// dev only flag -> name mapping\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(3 - String(line).length)}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\nconst mockError = () => mockWarn(true);\r\nfunction mockWarn(asError = false) {\r\n    expect.extend({\r\n        toHaveBeenWarned(received) {\r\n            asserted.add(received);\r\n            const passed = warn.mock.calls.some(args => args[0].indexOf(received) > -1);\r\n            if (passed) {\r\n                return {\r\n                    pass: true,\r\n                    message: () => `expected \"${received}\" not to have been warned.`\r\n                };\r\n            }\r\n            else {\r\n                const msgs = warn.mock.calls.map(args => args[0]).join('\\n - ');\r\n                return {\r\n                    pass: false,\r\n                    message: () => `expected \"${received}\" to have been warned.\\n\\nActual messages:\\n\\n - ${msgs}`\r\n                };\r\n            }\r\n        },\r\n        toHaveBeenWarnedLast(received) {\r\n            asserted.add(received);\r\n            const passed = warn.mock.calls[warn.mock.calls.length - 1][0].indexOf(received) > -1;\r\n            if (passed) {\r\n                return {\r\n                    pass: true,\r\n                    message: () => `expected \"${received}\" not to have been warned last.`\r\n                };\r\n            }\r\n            else {\r\n                const msgs = warn.mock.calls.map(args => args[0]).join('\\n - ');\r\n                return {\r\n                    pass: false,\r\n                    message: () => `expected \"${received}\" to have been warned last.\\n\\nActual messages:\\n\\n - ${msgs}`\r\n                };\r\n            }\r\n        },\r\n        toHaveBeenWarnedTimes(received, n) {\r\n            asserted.add(received);\r\n            let found = 0;\r\n            warn.mock.calls.forEach(args => {\r\n                if (args[0].indexOf(received) > -1) {\r\n                    found++;\r\n                }\r\n            });\r\n            if (found === n) {\r\n                return {\r\n                    pass: true,\r\n                    message: () => `expected \"${received}\" to have been warned ${n} times.`\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    pass: false,\r\n                    message: () => `expected \"${received}\" to have been warned ${n} times but got ${found}.`\r\n                };\r\n            }\r\n        }\r\n    });\r\n    let warn;\r\n    const asserted = new Set();\r\n    beforeEach(() => {\r\n        asserted.clear();\r\n        warn = jest.spyOn(console, asError ? 'error' : 'warn');\r\n        warn.mockImplementation(() => { });\r\n    });\r\n    afterEach(() => {\r\n        const assertedArray = Array.from(asserted);\r\n        const nonAssertedWarnings = warn.mock.calls\r\n            .map(args => args[0])\r\n            .filter(received => {\r\n            return !assertedArray.some(assertedMsg => {\r\n                return received.indexOf(assertedMsg) > -1;\r\n            });\r\n        });\r\n        warn.mockRestore();\r\n        if (nonAssertedWarnings.length) {\r\n            nonAssertedWarnings.forEach(warning => {\r\n                console.warn(warning);\r\n            });\r\n            throw new Error(`test case threw unexpected warnings.`);\r\n        }\r\n    });\r\n}\n\n// On the client we only need to offer special cases for boolean attributes that\r\n// have different names from their corresponding dom properties:\r\n// - itemscope -> N/A\r\n// - allowfullscreen -> allowFullscreen\r\n// - formnovalidate -> formNoValidate\r\n// - ismap -> isMap\r\n// - nomodule -> noModule\r\n// - novalidate -> noValidate\r\n// - readonly -> readOnly\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n// The full list is needed during SSR to produce the correct initial markup.\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n// CSS properties that accept plain numbers\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeStyle(value[i]);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,menuitem,' +\r\n    'summary,content,element,shadow,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\n\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    const isObjectA = isObject(a);\r\n    const isObjectB = isObject(b);\r\n    if (isObjectA && isObjectB) {\r\n        try {\r\n            const isArrayA = isArray(a);\r\n            const isArrayB = isArray(b);\r\n            if (isArrayA && isArrayB) {\r\n                return (a.length === b.length &&\r\n                    a.every((e, i) => looseEqual(e, b[i])));\r\n            }\r\n            else if (a instanceof Date && b instanceof Date) {\r\n                return a.getTime() === b.getTime();\r\n            }\r\n            else if (!isArrayA && !isArrayB) {\r\n                const keysA = Object.keys(a);\r\n                const keysB = Object.keys(b);\r\n                return (keysA.length === keysB.length &&\r\n                    keysA.every(key => looseEqual(a[key], b[key])));\r\n            }\r\n            else {\r\n                /* istanbul ignore next */\r\n                return false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            /* istanbul ignore next */\r\n            return false;\r\n        }\r\n    }\r\n    else if (!isObjectA && !isObjectB) {\r\n        return String(a) === String(b);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst extend = (a, b) => {\r\n    for (const key in b) {\r\n        a[key] = b[key];\r\n    }\r\n    return a;\r\n};\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isReservedProp = /*#__PURE__*/ makeMap('key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\nconst hyphenate = cacheStringFunction((str) => {\r\n    return str.replace(hyphenateRE, '-$1').toLowerCase();\r\n});\r\nconst capitalize = cacheStringFunction((str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n});\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\n// for converting {{ interpolation }} values to displayed strings.\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isArray(val) || (isPlainObject(val) && val.toString === objectToString)\r\n            ? JSON.stringify(val, null, 2)\r\n            : String(val);\r\n};\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, { value });\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, camelize, capitalize, def, escapeHtml, extend, generateCodeFrame, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isFunction, isGloballyWhitelisted, isHTMLTag, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, mockError, mockWarn, normalizeClass, normalizeStyle, objectToString, propsToAttrMap, remove, stringifyStyle, toDisplayString, toRawType, toTypeString };\n","import { EMPTY_OBJ, isArray, isSymbol, hasOwn, isObject, hasChanged, capitalize, toRawType, makeMap, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect(...args) {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn(...args);\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn(...args);\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const computedRunners = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || !shouldTrack) {\r\n                    if (effect.options.computed) {\r\n                        computedRunners.add(effect);\r\n                    }\r\n                    else {\r\n                        effects.add(effect);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        const isAddOrDelete = type === \"add\" /* ADD */ ||\r\n            (type === \"delete\" /* DELETE */ && !isArray(target));\r\n        if (isAddOrDelete ||\r\n            (type === \"set\" /* SET */ && target instanceof Map)) {\r\n            add(depsMap.get(isArray(target) ? 'length' : ITERATE_KEY));\r\n        }\r\n        if (isAddOrDelete && target instanceof Map) {\r\n            add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    // Important: computed effects must be run first so that computed getters\r\n    // can be invalidated before any normal effects that depend on them are run.\r\n    computedRunners.forEach(run);\r\n    effects.forEach(run);\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = arr[key](...args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return arr[key](...args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        const targetIsArray = isArray(target);\r\n        if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key) && builtInSymbols.has(key)) {\r\n            return res;\r\n        }\r\n        if (shallow) {\r\n            !isReadonly && track(target, \"get\" /* GET */, key);\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            if (targetIsArray) {\r\n                !isReadonly && track(target, \"get\" /* GET */, key);\r\n                return res;\r\n            }\r\n            else {\r\n                // ref unwrapping, only for Objects, not for Arrays.\r\n                return res.value;\r\n            }\r\n        }\r\n        !isReadonly && track(target, \"get\" /* GET */, key);\r\n        return isObject(res)\r\n            ? isReadonly\r\n                ? // need to lazy access readonly and reactive here to avoid\r\n                    // circular dependency\r\n                    readonly(res)\r\n                : reactive(res)\r\n            : res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    track(target, \"has\" /* HAS */, key);\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    has,\r\n    ownKeys,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = {\r\n    ...mutableHandlers,\r\n    get: shallowGet,\r\n    set: shallowSet\r\n};\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = {\r\n    ...readonlyHandlers,\r\n    get: shallowReadonlyGet\r\n};\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, wrap) {\r\n    target = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        track(target, \"get\" /* GET */, key);\r\n    }\r\n    track(target, \"get\" /* GET */, rawKey);\r\n    const { has, get } = getProto(target);\r\n    if (has.call(target, key)) {\r\n        return wrap(get.call(target, key));\r\n    }\r\n    else if (has.call(target, rawKey)) {\r\n        return wrap(get.call(target, rawKey));\r\n    }\r\n}\r\nfunction has$1(key) {\r\n    const target = toRaw(this);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    track(target, \"has\" /* HAS */, rawKey);\r\n    const has = getProto(target).has;\r\n    return has.call(target, key) || has.call(target, rawKey);\r\n}\r\nfunction size(target) {\r\n    target = toRaw(target);\r\n    track(target, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(getProto(target), 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    const result = proto.add.call(target, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return result;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get, set } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    const result = set.call(target, key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get, delete: del } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = del.call(target, key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? target instanceof Map\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = getProto(target).clear.call(target);\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = toRaw(observed);\r\n        const wrap = isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(target, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        // important: create sure the callback is\r\n        // 1. invoked with the reactive map as `this` and 3rd arg\r\n        // 2. the value received should be a corresponding reactive/readonly.\r\n        function wrappedCallback(value, key) {\r\n            return callback.call(observed, wrap(value), wrap(key), observed);\r\n        }\r\n        return getProto(target).forEach.call(target, wrappedCallback, thisArg);\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly) {\r\n    return function (...args) {\r\n        const target = toRaw(this);\r\n        const isMap = target instanceof Map;\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && isMap);\r\n        const isKeyOnly = method === 'keys' && isMap;\r\n        const innerIterator = getProto(target)[method].apply(target, args);\r\n        const wrap = isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(target, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, toReactive);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, toReadonly);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true);\r\n});\r\nfunction createInstrumentationGetter(instrumentations) {\r\n    return (target, key, receiver) => Reflect.get(hasOwn(instrumentations, key) && key in target\r\n        ? instrumentations\r\n        : target, key, receiver);\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(mutableInstrumentations)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(readonlyInstrumentations)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? `as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\n// WeakMaps that store {raw <-> observed} pairs.\r\nconst rawToReactive = new WeakMap();\r\nconst reactiveToRaw = new WeakMap();\r\nconst rawToReadonly = new WeakMap();\r\nconst readonlyToRaw = new WeakMap();\r\n// WeakSets for values that are marked readonly or non-reactive during\r\n// observable creation.\r\nconst rawValues = new WeakSet();\r\nconst collectionTypes = new Set([Set, Map, WeakMap, WeakSet]);\r\nconst isObservableType = /*#__PURE__*/ makeMap('Object,Array,Map,Set,WeakMap,WeakSet');\r\nconst canObserve = (value) => {\r\n    return (!value._isVNode &&\r\n        isObservableType(toRawType(value)) &&\r\n        !rawValues.has(value) &&\r\n        !Object.isFrozen(value));\r\n};\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (readonlyToRaw.has(target)) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, rawToReactive, reactiveToRaw, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are reactive, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, rawToReactive, reactiveToRaw, shallowReactiveHandlers, mutableCollectionHandlers);\r\n}\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, rawToReadonly, readonlyToRaw, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are readonly, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\n// This is used for creating the props proxy object for stateful components.\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, rawToReadonly, readonlyToRaw, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, toProxy, toRaw, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    let observed = toProxy.get(target);\r\n    if (observed !== void 0) {\r\n        return observed;\r\n    }\r\n    // target is already a Proxy\r\n    if (toRaw.has(target)) {\r\n        return target;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    if (!canObserve(target)) {\r\n        return target;\r\n    }\r\n    const handlers = collectionTypes.has(target.constructor)\r\n        ? collectionHandlers\r\n        : baseHandlers;\r\n    observed = new Proxy(target, handlers);\r\n    toProxy.set(target, observed);\r\n    toRaw.set(observed, target);\r\n    return observed;\r\n}\r\nfunction isReactive(value) {\r\n    value = readonlyToRaw.get(value) || value;\r\n    return reactiveToRaw.has(value);\r\n}\r\nfunction isReadonly(value) {\r\n    return readonlyToRaw.has(value);\r\n}\r\nfunction isProxy(value) {\r\n    return readonlyToRaw.has(value) || reactiveToRaw.has(value);\r\n}\r\nfunction toRaw(observed) {\r\n    observed = readonlyToRaw.get(observed) || observed;\r\n    return reactiveToRaw.get(observed) || observed;\r\n}\r\nfunction markRaw(value) {\r\n    rawValues.add(value);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return r ? r._isRef === true : false;\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    let value = shallow ? rawValue : convert(rawValue);\r\n    const r = {\r\n        _isRef: true,\r\n        get value() {\r\n            track(r, \"get\" /* GET */, 'value');\r\n            return value;\r\n        },\r\n        set value(newVal) {\r\n            if (hasChanged(toRaw(newVal), rawValue)) {\r\n                rawValue = newVal;\r\n                value = shallow ? newVal : convert(newVal);\r\n                trigger(r, \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? { newValue: newVal } : void 0);\r\n            }\r\n        }\r\n    };\r\n    return r;\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(ref, \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? { newValue: ref.value } : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nfunction customRef(factory) {\r\n    const { get, set } = factory(() => track(r, \"get\" /* GET */, 'value'), () => trigger(r, \"set\" /* SET */, 'value'));\r\n    const r = {\r\n        _isRef: true,\r\n        get value() {\r\n            return get();\r\n        },\r\n        set value(v) {\r\n            set(v);\r\n        }\r\n    };\r\n    return r;\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nfunction toRef(object, key) {\r\n    return {\r\n        _isRef: true,\r\n        get value() {\r\n            return object[key];\r\n        },\r\n        set value(newVal) {\r\n            object[key] = newVal;\r\n        }\r\n    };\r\n}\n\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    let dirty = true;\r\n    let value;\r\n    let computed;\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        // mark effect as computed so that it gets priority during trigger\r\n        computed: true,\r\n        scheduler: () => {\r\n            if (!dirty) {\r\n                dirty = true;\r\n                trigger(computed, \"set\" /* SET */, 'value');\r\n            }\r\n        }\r\n    });\r\n    computed = {\r\n        _isRef: true,\r\n        // expose effect so computed can be stopped\r\n        effect: runner,\r\n        get value() {\r\n            if (dirty) {\r\n                value = runner();\r\n                dirty = false;\r\n            }\r\n            track(computed, \"get\" /* GET */, 'value');\r\n            return value;\r\n        },\r\n        set value(newValue) {\r\n            setter(newValue);\r\n        }\r\n    };\r\n    return computed;\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, isProxy, shallowReactive, effect, stop, reactive, shallowReadonly, computed as computed$1, ref } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, isOn, camelize, capitalize, isObject, EMPTY_ARR, extend, normalizeClass, normalizeStyle, EMPTY_OBJ, hyphenate, def, hasOwn, isReservedProp, toRawType, makeMap, NO, invokeArrayFns, NOOP, remove, hasChanged, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, toDisplayString } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo)) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode);\r\n}\r\nfunction logError(err, type, contextVNode) {\r\n    // default behavior is crash in prod & test, recover in dev.\r\n    if ((process.env.NODE_ENV !== 'production') && ( !false)) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        console.error(err);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n    }\r\n    else {\r\n        throw err;\r\n    }\r\n}\n\nconst queue = [];\r\nconst postFlushCbs = [];\r\nconst p = Promise.resolve();\r\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    return fn ? p.then(fn) : p;\r\n}\r\nfunction queueJob(job) {\r\n    if (!queue.includes(job)) {\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue[i] = null;\r\n    }\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    if (!isArray(cb)) {\r\n        postFlushCbs.push(cb);\r\n    }\r\n    else {\r\n        postFlushCbs.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        nextTick(flushJobs);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (postFlushCbs.length) {\r\n        const cbs = [...new Set(postFlushCbs)];\r\n        postFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (let i = 0; i < cbs.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, cbs[i]);\r\n            }\r\n            cbs[i]();\r\n        }\r\n    }\r\n}\r\nconst getId = (job) => (job.id == null ? Infinity : job.id);\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    let job;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    // Jobs can never be null before flush starts, since they are only invalidated\r\n    // during execution of another flushed job.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    while ((job = queue.shift()) !== undefined) {\r\n        if (job === null) {\r\n            continue;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            checkRecursiveUpdates(seen, job);\r\n        }\r\n        callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n    }\r\n    flushPostFlushCbs(seen);\r\n    isFlushing = false;\r\n    // some postFlushCb queued jobs!\r\n    // keep flushing until it drains.\r\n    if (queue.length || postFlushCbs.length) {\r\n        flushJobs(seen);\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error('Maximum recursive updates exceeded. ' +\r\n                \"You may have code that is mutating state in your component's \" +\r\n                'render function or updated hook or watcher source function.');\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n// mark the current rendering instance for asset resolution (e.g.\r\n// resolveComponent, resolveDirective) during render\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n// dev only flag to track whether $attrs was used during render.\r\n// If $attrs was used during render then the warning for failed attrs\r\n// fallthrough can be suppressed.\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, parent, vnode, proxy, withProxy, props, slots, attrs, emit, renderCache } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(instance.render.call(proxyToUse, proxyToUse, renderCache));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props ? attrs : getFallthroughAttrs(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false &&\r\n            fallthroughAttrs &&\r\n            Object.keys(fallthroughAttrs).length) {\r\n            if (root.shapeFlag & 1 /* ELEMENT */ ||\r\n                root.shapeFlag & 6 /* COMPONENT */) {\r\n                root = cloneVNode(root, fallthroughAttrs);\r\n                // If the child root node is a compiler optimized vnode, make sure it\r\n                // force update full props to account for the merged attrs.\r\n                if (root.dynamicChildren) {\r\n                    root.patchFlag |= 16 /* FULL_PROPS */;\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                const allAttrs = Object.keys(attrs);\r\n                const eventAttrs = [];\r\n                const extraAttrs = [];\r\n                for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                    const key = allAttrs[i];\r\n                    if (isOn(key)) {\r\n                        // remove `on`, lowercase first letter to reflect event casing accurately\r\n                        eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                    }\r\n                    else {\r\n                        extraAttrs.push(key);\r\n                    }\r\n                }\r\n                if (extraAttrs.length) {\r\n                    warn(`Extraneous non-props attributes (` +\r\n                        `${extraAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes.`);\r\n                }\r\n                if (eventAttrs.length) {\r\n                    warn(`Extraneous non-emits event listeners (` +\r\n                        `${eventAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes. ` +\r\n                        `If the listener is intended to be a component custom event listener only, ` +\r\n                        `declare it using the \"emits\" option.`);\r\n                }\r\n            }\r\n        }\r\n        // inherit scopeId\r\n        const parentScopeId = parent && parent.type.__scopeId;\r\n        if (parentScopeId) {\r\n            root = cloneVNode(root, { [parentScopeId]: '' });\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\nconst getChildRoot = (vnode) => {\r\n    if (vnode.type !== Fragment) {\r\n        return [vnode, undefined];\r\n    }\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const children = rawChildren.filter(child => {\r\n        return !(isVNode(child) && child.type === Comment);\r\n    });\r\n    if (children.length !== 1) {\r\n        return [vnode, undefined];\r\n    }\r\n    const childRoot = children[0];\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren\r\n        ? dynamicChildren.indexOf(childRoot)\r\n        : null;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicIndex !== null)\r\n            dynamicChildren[dynamicIndex] = updatedRoot;\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nconst getFallthroughAttrs = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, parentComponent, optimized) {\r\n    const { props: prevProps, children: prevChildren } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        (prevChildren || nextChildren) &&\r\n        parentComponent &&\r\n        parentComponent.renderUpdated) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (patchFlag > 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (!optimized) {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = ( SuspenseImpl\r\n    );\r\nfunction mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (n2.suspense = createSuspenseBoundary(n2, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, suspense.subTree, hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // mount the fallback tree\r\n        patch(null, suspense.fallbackTree, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, optimized);\r\n        n2.el = suspense.fallbackTree.el;\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, optimized, { p: patch }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    const { content, fallback } = normalizeSuspenseChildren(n2);\r\n    const oldSubTree = suspense.subTree;\r\n    const oldFallbackTree = suspense.fallbackTree;\r\n    if (!suspense.isResolved) {\r\n        patch(oldSubTree, content, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n        if (suspense.deps > 0) {\r\n            // still pending. patch the fallback tree.\r\n            patch(oldFallbackTree, fallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n            isSVG, optimized);\r\n            n2.el = fallback.el;\r\n        }\r\n        // If deps somehow becomes 0 after the patch it means the patch caused an\r\n        // async dep component to unmount and removed its dep. It will cause the\r\n        // suspense to resolve and we don't need to do anything here.\r\n    }\r\n    else {\r\n        // just normal patch inner content as a fragment\r\n        patch(oldSubTree, content, container, anchor, parentComponent, suspense, isSVG, optimized);\r\n        n2.el = content.el;\r\n    }\r\n    suspense.subTree = content;\r\n    suspense.fallbackTree = fallback;\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode } } = rendererInternals;\r\n    const getCurrentTree = () => suspense.isResolved || suspense.isHydrating\r\n        ? suspense.subTree\r\n        : suspense.fallbackTree;\r\n    const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        optimized,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        subTree: content,\r\n        fallbackTree: fallback,\r\n        isHydrating,\r\n        isResolved: false,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve() {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (suspense.isResolved) {\r\n                    throw new Error(`resolveSuspense() is called on an already resolved suspense boundary.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`resolveSuspense() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, subTree, fallbackTree, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else {\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount fallback tree\r\n                if (fallbackTree.el) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(fallbackTree);\r\n                    unmount(fallbackTree, parentComponent, suspense, true);\r\n                }\r\n                // move content from off-dom container to actual container\r\n                move(subTree, container, anchor, 0 /* ENTER */);\r\n            }\r\n            const el = (vnode.el = subTree.el);\r\n            // suspense as the root node of a component...\r\n            if (parentComponent && parentComponent.subTree === vnode) {\r\n                parentComponent.vnode.el = el;\r\n                updateHOCHostEl(parentComponent, el);\r\n            }\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (!parent.isResolved) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.isResolved = true;\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        recede() {\r\n            suspense.isResolved = false;\r\n            const { vnode, subTree, fallbackTree, parentComponent, container, hiddenContainer, isSVG, optimized } = suspense;\r\n            // move content tree back to the off-dom container\r\n            const anchor = next(subTree);\r\n            move(subTree, hiddenContainer, null, 1 /* LEAVE */);\r\n            // remount the fallback tree\r\n            patch(null, fallbackTree, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n            isSVG, optimized);\r\n            const el = (vnode.el = fallbackTree.el);\r\n            // suspense as the root node of a component...\r\n            if (parentComponent && parentComponent.subTree === vnode) {\r\n                parentComponent.vnode.el = el;\r\n                updateHOCHostEl(parentComponent, el);\r\n            }\r\n            // invoke @recede event\r\n            const onRecede = vnode.props && vnode.props.onRecede;\r\n            if (isFunction(onRecede)) {\r\n                onRecede();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            move(getCurrentTree(), container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return next(getCurrentTree());\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            // suspense is already resolved, need to recede.\r\n            // use queueJob so it's handled synchronously after patching the current\r\n            // suspense tree\r\n            if (suspense.isResolved) {\r\n                queueJob(() => {\r\n                    suspense.recede();\r\n                });\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            suspense.deps++;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted || suspense.isUnmounted) {\r\n                    return;\r\n                }\r\n                suspense.deps--;\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is reoslved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                hydratedEl\r\n                    ? parentNode(hydratedEl)\r\n                    : parentNode(instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                if (suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            unmount(suspense.subTree, parentComponent, parentSuspense, doRemove);\r\n            if (!suspense.isResolved) {\r\n                unmount(suspense.fallbackTree, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, suspense.subTree, parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const { default: d, fallback } = children;\r\n        return {\r\n            content: normalizeVNode(isFunction(d) ? d() : d),\r\n            fallback: normalizeVNode(isFunction(fallback) ? fallback() : fallback)\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            content: normalizeVNode(children),\r\n            fallback: normalizeVNode(null)\r\n        };\r\n    }\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && !suspense.isResolved) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\n\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    return function renderFnWithContext() {\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn.apply(null, arguments);\r\n        setCurrentRenderingInstance(owner);\r\n        return res;\r\n    };\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\".`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa = nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return component || NULL_DYNAMIC_COMPONENT;\r\n    }\r\n}\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        let camelized, capitalized;\r\n        const registry = instance[type];\r\n        let res = registry[name] ||\r\n            registry[(camelized = camelize(name))] ||\r\n            registry[(capitalized = capitalize(camelized))];\r\n        if (!res && type === COMPONENTS) {\r\n            const self = instance.type;\r\n            const selfName = self.displayName || self.name;\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelized ||\r\n                    selfName === capitalized)) {\r\n                res = self;\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (res) {\r\n                // in dev, infer anonymous component's name based on registered name\r\n                if (type === COMPONENTS &&\r\n                    isObject(res) &&\r\n                    !res.name) {\r\n                    res.name = name;\r\n                }\r\n            }\r\n            else if (warnMissing) {\r\n                warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n// Open a block.\r\n// This must be called before `createBlock`. It cannot be part of `createBlock`\r\n// because the children of the block are evaluated before `createBlock` itself\r\n// is called. The generated code typically looks like this:\r\n//\r\n//   function render() {\r\n//     return (openBlock(),createBlock('div', null, [...]))\r\n//   }\r\n//\r\n// disableTracking is true when creating a fragment block, since a fragment\r\n// always diffs its children.\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n// Block tracking sometimes needs to be disabled, for example during the\r\n// creation of a tree that needs to be cached by v-once. The compiler generates\r\n// code like this:\r\n//   _cache[1] || (\r\n//     setBlockTracking(-1),\r\n//     _cache[1] = createVNode(...),\r\n//     setBlockTracking(1),\r\n//     _cache[1]\r\n//   )\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n// Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n// A block root keeps track of dynamic nodes within the block in the\r\n// `dynamicChildren` array.\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value._isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        n2.type.__hmrUpdated) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n// Internal API for registering an arguments transform for createVNode\r\n// used for creating stubs in the test-utils\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => (ref != null\r\n    ? isArray(ref)\r\n        ? ref\r\n        : [currentRenderingInstance, ref]\r\n    : null);\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    // class component normalization.\r\n    if (isFunction(type) && '__vccOpts' in type) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        :  isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        _isVNode: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    normalizeChildren(vnode, children);\r\n    // presence of a patch flag indicates this node needs patching on updates.\r\n    // component nodes also should always be patched, because even if the\r\n    // component doesn't need to update, it needs to persist the instance on to\r\n    // the next vnode so that it can be properly unmounted later.\r\n    if (shouldTrack > 0 &&\r\n        !isBlockNode &&\r\n        currentBlock &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */ &&\r\n        (patchFlag > 0 ||\r\n            shapeFlag & 128 /* SUSPENSE */ ||\r\n            shapeFlag & 4 /* STATEFUL_COMPONENT */ ||\r\n            shapeFlag & 2 /* FUNCTIONAL_COMPONENT */)) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps) {\r\n    const props = (extraProps\r\n        ? vnode.props\r\n            ? mergeProps(vnode.props, extraProps)\r\n            : extend({}, extraProps)\r\n        : vnode.props);\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    return {\r\n        _isVNode: true,\r\n        type: vnode.type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: vnode.scopeId,\r\n        children: vnode.children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        shapeFlag: vnode.shapeFlag,\r\n        patchFlag: vnode.patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\nfunction createStaticVNode(content) {\r\n    return createVNode(Static, null, content);\r\n}\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        // Normalize slot to plain children\r\n        if ((shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) &&\r\n            children.default) {\r\n            normalizeChildren(vnode, children.default());\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            if (!children._ && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nconst handlersRE = /^on|^vnode/;\r\nfunction mergeProps(...args) {\r\n    const ret = {};\r\n    extend(ret, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (handlersRE.test(key)) {\r\n                // on*, vnode*\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction emit(instance, event, ...args) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const options = normalizeEmitsOptions(instance.type.emits);\r\n        if (options) {\r\n            if (!(event in options)) {\r\n                const propsOptions = normalizePropsOptions(instance.type.props)[0];\r\n                if (!propsOptions || !(`on` + capitalize(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"on${capitalize(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = options[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...args);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let handler = props[`on${capitalize(event)}`];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && event.startsWith('update:')) {\r\n        event = hyphenate(event);\r\n        handler = props[`on${capitalize(event)}`];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(options) {\r\n    if (!options) {\r\n        return;\r\n    }\r\n    else if (isArray(options)) {\r\n        if (options._n) {\r\n            return options._n;\r\n        }\r\n        const normalized = {};\r\n        options.forEach(key => (normalized[key] = null));\r\n        def(options, '_n', normalized);\r\n        return normalized;\r\n    }\r\n    else {\r\n        return options;\r\n    }\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(emits, key) {\r\n    return (isOn(key) &&\r\n        (hasOwn((emits = normalizeEmitsOptions(emits)), key[2].toLowerCase() + key.slice(3)) ||\r\n            hasOwn(emits, key.slice(2))));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    const options = instance.type.props;\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production') && options && rawProps) {\r\n        validateProps(props, options);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!options) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawOptions = instance.type.props;\r\n    const rawCurrentProps = toRaw(props);\r\n    const { 0: options } = normalizePropsOptions(rawOptions);\r\n    if ((optimized || patchFlag > 0) && !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps && rawPrevProps[kebabKey] !== undefined) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && rawOptions && rawProps) {\r\n        validateProps(props, rawOptions);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const { 0: options, 1: needCastKeys } = normalizePropsOptions(instance.type.props);\r\n    const emits = instance.type.emits;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!emits || !isEmitListener(emits, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key]);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            value = isFunction(defaultValue) ? defaultValue() : defaultValue;\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(raw) {\r\n    if (!raw) {\r\n        return EMPTY_ARR;\r\n    }\r\n    if (raw._n) {\r\n        return raw._n;\r\n    }\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const normalizedEntry = [normalized, needCastKeys];\r\n    def(raw, '_n', normalizedEntry);\r\n    return normalizedEntry;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\nfunction validateProps(props, rawOptions) {\r\n    const rawValues = toRaw(props);\r\n    const options = normalizePropsOptions(rawOptions)[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol');\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = toRawType(value) === 'Object';\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        if (children._ === 1) {\r\n            instance.slots = children;\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        if (children._ === 1) {\r\n            // compiled slots.\r\n            if (\r\n            // bail on dynamic slots (v-if, v-for, reference of scope variables)\r\n            !(vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) &&\r\n                // bail on HRM updates\r\n                !((process.env.NODE_ENV !== 'production') && instance.parent && instance.parent.renderUpdated)) {\r\n                // compiled AND static.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic - update slots, but skip normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        config: {\r\n            isNativeTag: NO,\r\n            devtools: true,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = {\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted. Create a new app instance instead.`);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${key}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        };\r\n        return app;\r\n    };\r\n}\n\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, comp) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        comp,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        instance.renderUpdated = true;\r\n        instance.update();\r\n        instance.renderUpdated = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // 1. Update existing comp definition to match new one\r\n    const comp = record.comp;\r\n    Object.assign(comp, newComp);\r\n    for (const key in comp) {\r\n        if (!(key in newComp)) {\r\n            delete comp[key];\r\n        }\r\n    }\r\n    // 2. Mark component dirty. This forces the renderer to replace the component\r\n    // on patch.\r\n    comp.__hmrUpdated = true;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 3. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n    // 4. Make sure to unmark the component after the reload.\r\n    queuePostFlushCb(() => {\r\n        comp.__hmrUpdated = false;\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismtach(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    return onMismatch();\r\n                }\r\n                if (node.data !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text mismatch:` +\r\n                            `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                            `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                    node.data = vnode.children;\r\n                }\r\n                return nextSibling(node);\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    return onMismatch();\r\n                }\r\n                return nextSibling(node);\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    return onMismatch();\r\n                }\r\n                return nextSibling(node);\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    return onMismatch();\r\n                }\r\n                return hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        return onMismatch();\r\n                    }\r\n                    return hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    return isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        return onMismatch();\r\n                    }\r\n                    return vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    return vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n                return null;\r\n        }\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, vnode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const children = vnode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismtach = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    return supported;\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect =  queueEffectWithSuspense\r\n    ;\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent, setStaticContent: hostSetStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    // static nodes are only patched during dev for HMR\r\n                    n2.el = n1.el;\r\n                    if (n2.children !== n1.children) {\r\n                        hostSetStaticContent(n2.el, n2.children);\r\n                    }\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            const refValue = shapeFlag & 4 /* STATEFUL_COMPONENT */ ? n2.component.proxy : n2.el;\r\n            setRef(ref, n1 && n1.ref, parentComponent, refValue);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        if (n2.el && hostCloneNode !== undefined) {\r\n            hostInsert(hostCloneNode(n2.el), container, anchor);\r\n        }\r\n        else {\r\n            // static nodes are only present when used with compiler-dom/runtime-dom\r\n            // which guarantees presence of hostInsertStaticContent.\r\n            n2.el = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            // scopeId\r\n            if (scopeId) {\r\n                hostSetScopeId(el, scopeId);\r\n            }\r\n            const treeOwnerId = parentComponent && parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            // children\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (transition && !transition.persisted) {\r\n                transition.beforeEnter(el);\r\n            }\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            (transition && !transition.persisted) ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                transition && !transition.persisted && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        const oldProps = (n1 && n1.props) || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.renderUpdated) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (prev !== next) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.renderUpdated) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag & 64 /* STABLE_FRAGMENT */ && dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, parentComponent, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if ( instance.asyncDep) {\r\n            if (!parentSuspense) {\r\n                if ((process.env.NODE_ENV !== 'production'))\r\n                    warn('async setup() is used without a suspense boundary!');\r\n                return;\r\n            }\r\n            parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, parentComponent, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, parentComponent, optimized)) {\r\n            if (\r\n                instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, a, parent } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                next.el = vnode.el;\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // reset refs\r\n                // only needed if previous patch had refs\r\n                if (instance.refs !== EMPTY_OBJ) {\r\n                    instance.refs = {};\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (next === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        if (patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n        }\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if ( shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false) => {\r\n        const { props, ref, children, dynamicChildren, shapeFlag, dirs } = vnode;\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        const shouldKeepAlive = shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n        let vnodeHook;\r\n        // unset ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, null);\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount) && !shouldKeepAlive) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            if (shouldKeepAlive) {\r\n                parentComponent.ctx.deactivate(vnode);\r\n            }\r\n            else {\r\n                unmountComponent(vnode.component, parentSuspense, doRemove);\r\n            }\r\n        }\r\n        else {\r\n            if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if (((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) &&\r\n            !shouldKeepAlive) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um, da, isDeactivated } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        // deactivated hook\r\n        if (da &&\r\n            !isDeactivated &&\r\n            instance.vnode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            queuePostRenderEffect(da, parentSuspense);\r\n        }\r\n        queuePostFlushCb(() => {\r\n            instance.isUnmounted = true;\r\n        });\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (\r\n            parentSuspense &&\r\n            !parentSuspense.isResolved &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const setRef = (rawRef, oldRawRef, parent, value) => {\r\n        const [owner, ref] = rawRef;\r\n        if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n            warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n                `A vnode with ref must be created inside the render function.`);\r\n            return;\r\n        }\r\n        const oldRef = oldRawRef && oldRawRef[1];\r\n        const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n        const setupState = owner.setupState;\r\n        // unset old ref\r\n        if (oldRef != null && oldRef !== ref) {\r\n            if (isString(oldRef)) {\r\n                refs[oldRef] = null;\r\n                if (hasOwn(setupState, oldRef)) {\r\n                    setupState[oldRef] = null;\r\n                }\r\n            }\r\n            else if (isRef(oldRef)) {\r\n                oldRef.value = null;\r\n            }\r\n        }\r\n        if (isString(ref)) {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        }\r\n        else if (isRef(ref)) {\r\n            ref.value = value;\r\n        }\r\n        else if (isFunction(ref)) {\r\n            callWithErrorHandling(ref, parent, 12 /* FUNCTION_REF */, [value, refs]);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn('Invalid template ref type:', value, `(${typeof value})`);\r\n        }\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: Function,\r\n        onEnter: Function,\r\n        onAfterEnter: Function,\r\n        onEnterCancelled: Function,\r\n        // leave\r\n        onBeforeLeave: Function,\r\n        onLeave: Function,\r\n        onAfterLeave: Function,\r\n        onLeaveCancelled: Function\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        return () => {\r\n            const children = slots.default && slots.default();\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = (innerChild.transition = resolveTransitionHooks(innerChild, rawProps, state, instance));\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                !isSameVNodeType(innerChild, oldInnerChild)) {\r\n                const prevHooks = oldInnerChild.transition;\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    delete prevHooks.delayedLeave;\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, { appear, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled }, state, instance) {\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        persisted,\r\n        beforeEnter(el) {\r\n            if (!appear && !state.isMounted) {\r\n                return;\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(onBeforeEnter, [el]);\r\n        },\r\n        enter(el) {\r\n            if (!appear && !state.isMounted) {\r\n                return;\r\n            }\r\n            let called = false;\r\n            const afterEnter = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(onEnterCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterEnter, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (onEnter) {\r\n                onEnter(el, afterEnter);\r\n            }\r\n            else {\r\n                afterEnter();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const afterLeave = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, afterLeave);\r\n            }\r\n            else {\r\n                afterLeave();\r\n            }\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const child = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(child.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                child.isDeactivated = false;\r\n                if (child.a) {\r\n                    invokeArrayFns(child.a);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                const component = vnode.component;\r\n                if (component.da) {\r\n                    invokeArrayFns(component.da);\r\n                }\r\n                component.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            vnode.shapeFlag = 4 /* STATEFUL_COMPONENT */;\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                current.shapeFlag = 4 /* STATEFUL_COMPONENT */;\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => matches(exclude, name));\r\n        });\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(unmount);\r\n        });\r\n        return () => {\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            let vnode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(vnode) ||\r\n                !(vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */)) {\r\n                current = null;\r\n                return vnode;\r\n            }\r\n            const comp = vnode.type;\r\n            const name = getName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                return vnode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n            }\r\n            cache.set(key, vnode);\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(Array.from(keys)[0]);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return vnode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction getName(comp) {\r\n    return comp.displayName || comp.name;\r\n}\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], hook);\r\n    }, target);\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = `on${capitalize(ErrorTypeStrings[type].replace(/ hook$/, ''))}`;\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            ( ` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\nconst invoke = (fn) => fn();\r\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const instance = currentInstance;\r\n    let getter;\r\n    if (isArray(source)) {\r\n        getter = () => source.map(s => isRef(s)\r\n            ? s.value\r\n            : callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */));\r\n    }\r\n    else if (isRef(source)) {\r\n        getter = () => source.value;\r\n    }\r\n    else if (cb) {\r\n        // getter with cb\r\n        getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n    }\r\n    else {\r\n        // no cb -> simple effect\r\n        getter = () => {\r\n            if (instance && instance.isUnmounted) {\r\n                return;\r\n            }\r\n            if (cleanup) {\r\n                cleanup();\r\n            }\r\n            return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n        };\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const applyCb = cb\r\n        ? () => {\r\n            if (instance && instance.isUnmounted) {\r\n                return;\r\n            }\r\n            const newValue = runner();\r\n            if (deep || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        : void 0;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = invoke;\r\n    }\r\n    else if (flush === 'pre') {\r\n        scheduler = job => {\r\n            if (!instance || instance.isMounted) {\r\n                queueJob(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    else {\r\n        scheduler = job => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        // so it runs before component update effects in pre flush mode\r\n        computed: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler: applyCb ? () => scheduler(applyCb) : scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner);\r\n    // initial run\r\n    if (applyCb) {\r\n        if (immediate) {\r\n            applyCb();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    const stop = watch(getter, cb.bind(publicThis), options);\r\n    onBeforeUnmount(stop, this);\r\n    return stop;\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (value instanceof Map) {\r\n        value.forEach((v, key) => {\r\n            // to register mutation dep for existing keys\r\n            traverse(value.get(key), seen);\r\n        });\r\n    }\r\n    else if (value instanceof Set) {\r\n        value.forEach(v => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        const provides = instance.provides;\r\n        if (key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    props: propsOptions, data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeUnmount, unmounted, renderTracked, renderTriggered, errorCaptured } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    // call it only during dev\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        callSyncHook('beforeCreate', options, publicThis, globalMixins);\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production') && propsOptions) {\r\n        for (const key in normalizePropsOptions(propsOptions)[0]) {\r\n            checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from, opt.default);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                ctx[key] = methodHandler.bind(publicThis);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (dataOptions) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isFunction(dataOptions)) {\r\n            warn(`The data option must be a function. ` +\r\n                `Plain object usage is no longer supported.`);\r\n        }\r\n        if (asMixin) {\r\n            deferredData.push(dataOptions);\r\n        }\r\n        else {\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                Object.defineProperty(ctx, key, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get: () => rawData[key],\r\n                    set: NOOP\r\n                });\r\n            }\r\n        }\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        const provides = isFunction(provideOptions)\r\n            ? provideOptions.call(publicThis)\r\n            : provideOptions;\r\n        for (const key in provides) {\r\n            provide(key, provides[key]);\r\n        }\r\n    }\r\n    // asset options\r\n    if (components) {\r\n        extend(instance.components, components);\r\n    }\r\n    if (directives) {\r\n        extend(instance.directives, directives);\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', options, publicThis, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n}\r\nfunction callSyncHook(name, options, ctx, globalMixins) {\r\n    callHookFromMixins(name, globalMixins, ctx);\r\n    const baseHook = options.extends && options.extends[name];\r\n    if (baseHook) {\r\n        baseHook.call(ctx);\r\n    }\r\n    const mixins = options.mixins;\r\n    if (mixins) {\r\n        callHookFromMixins(name, mixins, ctx);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        selfHook.call(ctx);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, mixins, ctx) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            fn.call(ctx);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            watch(getter, raw.handler.bind(publicThis), raw);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`);\r\n    }\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    extendsOptions && mergeOptions(options, extendsOptions, instance);\r\n    mixins && mixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    for (const key in from) {\r\n        const strat = strats && strats[key];\r\n        if (strat) {\r\n            to[key] = strat(to[key], from[key], instance.proxy, key);\r\n        }\r\n        else if (!hasOwn(to, key)) {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\nconst publicPropertiesMap = {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => i.parent && i.parent.proxy,\r\n    $root: i => i.root && i.root.proxy,\r\n    $emit: i => i.emit,\r\n    $options: i => ( resolveMergedOptions(i) ),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: () => nextTick,\r\n    $watch:  i => instanceWatch.bind(i) \r\n};\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            type.props &&\r\n                hasOwn(normalizePropsOptions(type.props)[0], key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if ((process.env.NODE_ENV !== 'production') && key === '$attrs') {\r\n                markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') && currentRenderingInstance) {\r\n            warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                `but is not defined on instance.`);\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (key in instance.props) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, type, appContext } }, key) {\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            (type.props && hasOwn(normalizePropsOptions(type.props)[0], key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = {\r\n    ...PublicInstanceProxyHandlers,\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        return key[0] !== '_' && !isGloballyWhitelisted(key);\r\n    }\r\n};\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, type: { props: propsOptions } } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(normalizePropsOptions(propsOptions)[0]).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid++,\r\n        vnode,\r\n        parent,\r\n        appContext,\r\n        type: vnode.type,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // per-instance asset storage (mutable during options resolution)\r\n        components: Object.create(appContext.components),\r\n        directives: Object.create(appContext.directives),\r\n        // suspense related\r\n        suspense,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null,\r\n        emit: null // to be set immediately\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children, shapeFlag } = instance.vnode;\r\n    const isStateful = shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = {};\r\n    // 1. create public instance / render proxy\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        instance.render = setupResult;\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        instance.setupState = reactive(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n// exported method uses any to avoid d.ts relying on the compiler types.\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement || NO\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n            Component.render._rc = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && !Component.render) {\r\n            /* istanbul ignore if */\r\n            if (!compile && Component.template) {\r\n                warn(`Component provided template option but ` +\r\n                    `runtime compilation is not supported in this build of Vue.` +\r\n                    ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                        ) /* should not happen */);\r\n            }\r\n            else {\r\n                warn(`Component is missing template or render function.`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    {\r\n        currentInstance = instance;\r\n        applyOptions(instance, Component);\r\n        currentInstance = null;\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect) {\r\n    if (currentInstance) {\r\n        (currentInstance.effects || (currentInstance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction formatComponentName(Component, isRoot = false) {\r\n    let name = isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.vue$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options } : options;\r\n}\n\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent: loadingComponent, errorComponent: errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if (( suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, { error: err })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { props, children } }) {\r\n    return createVNode(comp, props, children);\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    if (arguments.length === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst useCSSModule = (name = '$style') => {\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCSSModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n};\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSsrContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\n// actual implementation\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n// For prefixing keys in v-on=\"obj\" with \"on\"\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[`on${key}`] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    return (openBlock(),\r\n        createBlock(Fragment, { key: props.key }, slot ? slot(props) : fallback ? fallback() : [], slots._ ? 64 /* STABLE_FRAGMENT */ : -2 /* BAIL */));\r\n}\n\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Public API ------------------------------------------------------------------\r\nconst version = \"3.0.0-beta.5\";\r\nconst ssrUtils = ( null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, getCurrentInstance, h, handleError, inject, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useCSSModule, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, callWithAsyncErrorHandling, warn, h, BaseTransition, getCurrentInstance, useTransitionState, onUpdated, Fragment, setTransitionHooks, resolveTransitionHooks, Comment, createVNode, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, hyphenate, capitalize, isSpecialBooleanAttr, isArray, EMPTY_OBJ, isOn, isFunction, invokeArrayFns, looseIndexOf, looseEqual, isObject, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        if (anchor) {\r\n            parent.insertBefore(child, anchor);\r\n        }\r\n        else {\r\n            parent.appendChild(child);\r\n        }\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const node = temp.children[0];\r\n        nodeOps.insert(node, parent, anchor);\r\n        return node;\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // same as `insertStaticContent`, but this is also dev only (for HMR).\r\n    nodeOps.setStaticContent = (el, content) => {\r\n        el.innerHTML = content;\r\n    };\r\n}\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        style.cssText = next;\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (!next[key]) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (name.startsWith('--')) {\r\n        // custom property definition\r\n        style.setProperty(name, val);\r\n    }\r\n    else {\r\n        const prefixed = autoPrefix(style, name);\r\n        if (importantRE.test(val)) {\r\n            // !important\r\n            style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n        }\r\n        else {\r\n            style[prefixed] = val;\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // correspoding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// Reason: potentially setting innerHTML.\r\n// This can come from explicit usage of v-html or innerHTML as a prop in render\r\n// functions. The user is reponsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        el.value = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (value === '' && typeof el[key] === 'boolean') {\r\n        // e.g. <select multiple> compiles to { multiple: '' }\r\n        el[key] = true;\r\n    }\r\n    else {\r\n        el[key] = value == null ? '' : value;\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res ( relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    const name = rawName.slice(2).toLowerCase();\r\n    const prevOptions = prevValue && 'options' in prevValue && prevValue.options;\r\n    const nextOptions = nextValue && 'options' in nextValue && nextValue.options;\r\n    const invoker = prevValue && prevValue.invoker;\r\n    const value = nextValue && 'handler' in nextValue ? nextValue.handler : nextValue;\r\n    if (prevOptions || nextOptions) {\r\n        const prev = prevOptions || EMPTY_OBJ;\r\n        const next = nextOptions || EMPTY_OBJ;\r\n        if (prev.capture !== next.capture ||\r\n            prev.passive !== next.passive ||\r\n            prev.once !== next.once) {\r\n            if (invoker) {\r\n                removeEventListener(el, name, invoker, prev);\r\n            }\r\n            if (nextValue && value) {\r\n                const invoker = createInvoker(value, instance);\r\n                nextValue.invoker = invoker;\r\n                addEventListener(el, name, invoker, next);\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    if (nextValue && value) {\r\n        if (invoker) {\r\n            prevValue.invoker = null;\r\n            invoker.value = value;\r\n            nextValue.invoker = invoker;\r\n            invoker.lastUpdated = getNow();\r\n        }\r\n        else {\r\n            addEventListener(el, name, createInvoker(value, instance), nextOptions || void 0);\r\n        }\r\n    }\r\n    else if (invoker) {\r\n        removeEventListener(el, name, invoker, prevOptions || void 0);\r\n    }\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        if (e.timeStamp >= invoker.lastUpdated - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    initialValue.invoker = invoker;\r\n    invoker.lastUpdated = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!key.startsWith('onUpdate:')) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (isSVG\r\n                ? // most keys must be set as attribute on svg elements to work\r\n                    // ...except innerHTML\r\n                    key === 'innerHTML' ||\r\n                        // or native onclick with function values\r\n                        (key in el && nativeOnRE.test(key) && isFunction(nextValue))\r\n                : // for normal html elements, set as a property if it exists\r\n                    key in el &&\r\n                        // except native onclick with string values\r\n                        !(nativeOnRE.test(key) && isString(nextValue))) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\nfunction toNumber(val) {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    beforeMount(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n        el.value = value;\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', () => {\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    beforeUpdate(el, { value, oldValue, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value === oldValue) {\r\n            return;\r\n        }\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        el.value = value;\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    beforeMount(el, binding, vnode) {\r\n        setChecked(el, binding, vnode);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    beforeMount(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    // use mounted & updated because <select> relies on its children <option>s.\r\n    mounted(el, { value }, vnode) {\r\n        setSelected(el, value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map(getValue);\r\n            el._assign(el.multiple ? selectedVal : selectedVal[0]);\r\n        });\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            option.selected = looseIndexOf(value, optionValue) > -1;\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    beforeMount(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'beforeMount');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (el.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el) {\r\n        setDisplay(el, true);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nconst TransitionPropsValidators = (Transition.props = {\r\n    ...BaseTransition.props,\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n});\r\nfunction resolveTransitionProps({ name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to`, ...baseProps }) {\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const instance = getCurrentInstance();\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { appear, onBeforeEnter, onEnter, onLeave } = baseProps;\r\n    // is appearing\r\n    if (appear && !getCurrentInstance().isMounted) {\r\n        enterFromClass = appearFromClass;\r\n        enterActiveClass = appearActiveClass;\r\n        enterToClass = appearToClass;\r\n    }\r\n    const finishEnter = (el, done) => {\r\n        removeTransitionClass(el, enterToClass);\r\n        removeTransitionClass(el, enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    // only needed for user hooks called in nextFrame\r\n    // sync errors are already handled by BaseTransition\r\n    function callHookWithErrorHandling(hook, args) {\r\n        callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    }\r\n    return {\r\n        ...baseProps,\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterActiveClass);\r\n            addTransitionClass(el, enterFromClass);\r\n        },\r\n        onEnter(el, done) {\r\n            nextFrame(() => {\r\n                const resolve = () => finishEnter(el, done);\r\n                onEnter && callHookWithErrorHandling(onEnter, [el, resolve]);\r\n                removeTransitionClass(el, enterFromClass);\r\n                addTransitionClass(el, enterToClass);\r\n                if (!(onEnter && onEnter.length > 1)) {\r\n                    if (enterDuration) {\r\n                        setTimeout(resolve, enterDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        onLeave(el, done) {\r\n            addTransitionClass(el, leaveActiveClass);\r\n            addTransitionClass(el, leaveFromClass);\r\n            nextFrame(() => {\r\n                const resolve = () => finishLeave(el, done);\r\n                onLeave && callHookWithErrorHandling(onLeave, [el, resolve]);\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    if (leaveDuration) {\r\n                        setTimeout(resolve, leaveDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        onEnterCancelled: finishEnter,\r\n        onLeaveCancelled: finishLeave\r\n    };\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [toNumber$1(duration.enter), toNumber$1(duration.leave)];\r\n    }\r\n    else {\r\n        const n = toNumber$1(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction toNumber$1(val) {\r\n    const res = Number(val || 0);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nfunction whenTransitionEnds(el, expectedType, cb) {\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return cb();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        cb();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el) {\r\n            if (++ended >= propCount) {\r\n                end();\r\n            }\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\n\nconst reactiveToRaw = new WeakMap();\r\nconst readonlyToRaw = new WeakMap();\r\nfunction toRaw(observed) {\r\n    observed = readonlyToRaw.get(observed) || observed;\r\n    return reactiveToRaw.get(observed) || observed;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    props: {\r\n        ...TransitionPropsValidators,\r\n        tag: String,\r\n        moveClass: String\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        let hasMove = null;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            // Check if move transition is needed. This check is cached per-instance.\r\n            hasMove =\r\n                hasMove === null\r\n                    ? (hasMove = hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass))\r\n                    : hasMove;\r\n            if (!hasMove) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = getTransitionRawChildren(slots.default ? slots.default() : []);\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && child.type !== Comment) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nfunction getTransitionRawChildren(children) {\r\n    let ret = [];\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            ret = ret.concat(getTransitionRawChildren(child.children));\r\n        }\r\n        else {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n// remove mode props as TransitionGroup doesn't support it\r\ndelete TransitionGroupImpl.props.mode;\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\n// this is put in a dedicated function to avoid the line from being treeshaken\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst rendererOptions = {\r\n    patchProp,\r\n    ...nodeOps\r\n};\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        container.removeAttribute('v-cloak');\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","<template>\n  <h1>Hello Vue 3!</h1>\n  <button @click=\"inc\">Clicked {{ count }} times.</button>\n</template>\n\n<script>\nimport { ref } from 'vue'\n\nexport default {\n  setup() {\n    const count = ref(0)\n    const inc = () => {\n      count.value++\n    }\n\n    return {\n      count,\n      inc\n    }\n  }\n}\n</script>\n\n<style scoped>\nimg {\n  width: 200px;\n}\nh1 {\n  font-family: Arial, Helvetica, sans-serif;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=e3a1a498&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=e3a1a498&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-e3a1a498\"\n\nexport default script","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n"],"sourceRoot":""}